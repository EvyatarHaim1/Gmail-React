[{"C:\\Users\\Evyat\\home\\Worked-Projects\\gmail-react\\src\\index.js":"1","C:\\Users\\Evyat\\home\\Worked-Projects\\gmail-react\\src\\App.js":"2","C:\\Users\\Evyat\\home\\Worked-Projects\\gmail-react\\src\\serviceWorker.js":"3","C:\\Users\\Evyat\\home\\Worked-Projects\\gmail-react\\src\\app\\store.js":"4","C:\\Users\\Evyat\\home\\Worked-Projects\\gmail-react\\src\\components\\Header.js":"5","C:\\Users\\Evyat\\home\\Worked-Projects\\gmail-react\\src\\components\\Sidebar.js":"6","C:\\Users\\Evyat\\home\\Worked-Projects\\gmail-react\\src\\components\\SidebarOption.js":"7","C:\\Users\\Evyat\\home\\Worked-Projects\\gmail-react\\src\\components\\Mail.js":"8","C:\\Users\\Evyat\\home\\Worked-Projects\\gmail-react\\src\\components\\EmailList.js":"9","C:\\Users\\Evyat\\home\\Worked-Projects\\gmail-react\\src\\components\\Section.js":"10","C:\\Users\\Evyat\\home\\Worked-Projects\\gmail-react\\src\\components\\EmailRow.js":"11","C:\\Users\\Evyat\\home\\Worked-Projects\\gmail-react\\src\\features\\mailSlice.js":"12","C:\\Users\\Evyat\\home\\Worked-Projects\\gmail-react\\src\\components\\SendMail.js":"13","C:\\Users\\Evyat\\home\\Worked-Projects\\gmail-react\\src\\firebase.js":"14","C:\\Users\\Evyat\\home\\Worked-Projects\\gmail-react\\src\\features\\userSlice.js":"15","C:\\Users\\Evyat\\home\\Worked-Projects\\gmail-react\\src\\components\\Login.js":"16"},{"size":644,"mtime":499162500000,"results":"17","hashOfConfig":"18"},{"size":1756,"mtime":1611864572058,"results":"19","hashOfConfig":"18"},{"size":5141,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":264,"mtime":1611856078519,"results":"21","hashOfConfig":"18"},{"size":2693,"mtime":1611865380610,"results":"22","hashOfConfig":"18"},{"size":2763,"mtime":1611752977495,"results":"23","hashOfConfig":"18"},{"size":1155,"mtime":1611348124491,"results":"24","hashOfConfig":"18"},{"size":4040,"mtime":1611784200723,"results":"25","hashOfConfig":"18"},{"size":3970,"mtime":1611865863703,"results":"26","hashOfConfig":"18"},{"size":925,"mtime":1611437089199,"results":"27","hashOfConfig":"18"},{"size":2550,"mtime":1611788005437,"results":"28","hashOfConfig":"18"},{"size":749,"mtime":1611774600722,"results":"29","hashOfConfig":"18"},{"size":3727,"mtime":1611766926717,"results":"30","hashOfConfig":"18"},{"size":637,"mtime":1611766098717,"results":"31","hashOfConfig":"18"},{"size":461,"mtime":1611856180182,"results":"32","hashOfConfig":"18"},{"size":1392,"mtime":1611864017380,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"15b1sxc",{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\Evyat\\home\\Worked-Projects\\gmail-react\\src\\index.js",[],["73","74"],"C:\\Users\\Evyat\\home\\Worked-Projects\\gmail-react\\src\\App.js",["75","76"],"import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux'\r\nimport './App.css';\r\nimport Header from './components/Header';\r\nimport Sidebar from './components/Sidebar';\r\nimport { BrowserRouter as Router,Switch,Route,Link} from \"react-router-dom\";\r\nimport Mail from './components/Mail'; \r\nimport EmailList from './components/EmailList';\r\nimport SendMail from './components/SendMail';\r\nimport { selectSendMessageIsOpen } from './features/mailSlice';\r\nimport {login, logout, selectUser} from './features/userSlice';\r\nimport Login from './components/Login';\r\nimport {useDispatch } from 'react-redux';\r\nimport { auth } from './firebase';\r\n\r\nfunction App() {\r\n\r\n  const dispatch = useDispatch();\r\n  const sendMessageIsOpen = useSelector(selectSendMessageIsOpen);\r\n  const user = useSelector(selectUser);\r\n\r\n  useEffect(() => {\r\n     auth.onAuthStateChanged((user) => {\r\n       if(user){\r\n          dispatch(\r\n            login({\r\n            displayName: user.displayName,\r\n            email: user.email,\r\n            photoUrl: user.photoURL\r\n          })\r\n         )\r\n       } else{\r\n         dispatch(logout)\r\n\r\n       }\r\n     })\r\n  },[])\r\n\r\n  return (\r\n    <Router>\r\n       \r\n       {!user ? (\r\n         <Login />\r\n       ) : (\r\n        <div className=\"App\">\r\n          <Header />\r\n\r\n          <div className=\"app_body\">\r\n              <Sidebar />\r\n              <Switch>\r\n                  <Route path=\"/mail\">\r\n                    <Mail />\r\n                  </Route>\r\n                  <Route path=\"/\">\r\n                    <EmailList />\r\n                  </Route>\r\n              </Switch>\r\n          </div>\r\n          {sendMessageIsOpen && <SendMail />}\r\n        </div>\r\n       )}\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Evyat\\home\\Worked-Projects\\gmail-react\\src\\serviceWorker.js",[],"C:\\Users\\Evyat\\home\\Worked-Projects\\gmail-react\\src\\app\\store.js",[],"C:\\Users\\Evyat\\home\\Worked-Projects\\gmail-react\\src\\components\\Header.js",["77","78","79"],"import React from 'react';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport styled from 'styled-components';\r\nimport { IconButton } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { Avatar } from '@material-ui/core';\r\nimport { logout, selectUser } from '../features/userSlice';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { auth } from '../firebase';\r\nfunction Header() {\r\n\r\n    const user = useSelector(selectUser);\r\n    const dispatch = useDispatch();\r\n\r\n    const signOut = () => {\r\n        auth.signOut().then(() => {\r\n            dispatch(logout());\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Div>\r\n            <Header_left>\r\n              <IconButton>\r\n                 <MenuIcon />\r\n              </IconButton>\r\n              <img\r\n                 src=\"https://www.amocrm.com/static/images/pages/integrations/logo/gmail.png\"\r\n                 alt=\"\"\r\n              />\r\n            </Header_left>\r\n\r\n            <Header_middle>\r\n                  <SearchIcon />\r\n                  <input placeholder=\"Search mail\" type=\"text\" />\r\n                  <ArrowDropDownIcon className=\"header_inputCaret\" />\r\n            </Header_middle>\r\n\r\n            <Header_right>\r\n                 <IconButton>\r\n                     <AppsIcon />\r\n                 </IconButton>\r\n                 <IconButton>\r\n                     <NotificationsIcon />\r\n                 </IconButton>\r\n                 <Avatar className=\"userPic\" src={user?.photoUrl} onClick={signOut}/>\r\n            </Header_right>\r\n        </Div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\nconst Div = styled.div`\r\n   display: flex;\r\n   align-items: center;\r\n   justify-content: space-between;\r\n   border-bottom: 1px solid whitesmoke;\r\n`\r\nconst Header_left = styled.div`\r\n   display: flex;\r\n   align-items: center;\r\n\r\n  img{\r\n      object-fit: contain;\r\n      height: 80px;\r\n      margin-left: 5px;\r\n  }\r\n` \r\nconst Header_middle = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    flex: 0.7;\r\n    background-color: whitesmoke;\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    \r\n    .MuiSvgIcon-root{\r\n        color:gray;\r\n    }\r\n    input{\r\n        border: none;\r\n        width: 100%;\r\n        padding: 10px;\r\n        outline-width: 0;\r\n        font-size: medium;\r\n        background-color: transparent;\r\n    }\r\n` \r\nconst Header_right = styled.div`\r\n   display:flex;\r\n   padding-right: 20px;\r\n\r\n   .userPic{\r\n       :hover{\r\n           cursor: pointer;\r\n       }\r\n   }\r\n` \r\n","C:\\Users\\Evyat\\home\\Worked-Projects\\gmail-react\\src\\components\\Sidebar.js",[],"C:\\Users\\Evyat\\home\\Worked-Projects\\gmail-react\\src\\components\\SidebarOption.js",[],"C:\\Users\\Evyat\\home\\Worked-Projects\\gmail-react\\src\\components\\Mail.js",[],"C:\\Users\\Evyat\\home\\Worked-Projects\\gmail-react\\src\\components\\EmailList.js",["80"],"import React, { useState, useEffect } from 'react';\r\nimport Section from './Section';\r\nimport styled from 'styled-components';\r\nimport { Checkbox, IconButton } from '@material-ui/core';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport RedoIcon from '@material-ui/icons/Redo';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport KeyboardHideIcon from '@material-ui/icons/KeyboardHide';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\r\nimport EmailRow from './EmailRow';\r\nimport { db } from '../firebase';\r\n\r\nfunction EmailList() {\r\n\r\n    const [emails, setEmails ] = useState([]); \r\n\r\n    useEffect(() => {\r\n        console.log('gfg')\r\n      db.collection('emails')\r\n        .orderBy('timestamp', 'desc')\r\n        .onSnapshot((snapshot) => \r\n            setEmails(\r\n                snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                data: doc.data(),\r\n            })\r\n        )))\r\n        console.log(emails)\r\n    },[])\r\n\r\n    return (\r\n        <Div>\r\n            <div className=\"emailList_settings\">\r\n                <div className=\"emailList_settingsLeft\">\r\n                    <Checkbox />\r\n                    <IconButton>\r\n                        <ArrowDropDownIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <RedoIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <div className=\"emailList_settingsRight\">\r\n                    <IconButton>\r\n                        <ChevronLeftIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <KeyboardHideIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <SettingsIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            <div className=\"emailList_sections\">\r\n                 <Section Icon={InboxIcon} title=\"Primary\" color=\"red\" selected />\r\n                 <Section Icon={PeopleIcon} title=\"Social\" color=\"#1a73e8\" />\r\n                 <Section Icon={LocalOfferIcon} title=\"Promotions\" color=\"green\" />\r\n            </div>\r\n\r\n            <div className=\"emailList_list\">\r\n                {emails.map(({id, data: { to, subject, message, timestamp } }) => (\r\n                <EmailRow id={id}\r\n                          key={id}\r\n                          title={to}\r\n                          subject={subject}\r\n                          description={message}\r\n                          time={new Date(timestamp?.seconds * 1000).toUTCString()}\r\n                />\r\n                ))\r\n           }\r\n            </div>\r\n        </Div>\r\n    )\r\n}\r\n\r\nexport default EmailList\r\n\r\nconst Div = styled.div`\r\n    flex: 1;\r\n    overflow: scroll;\r\n\r\n    ::-webkit-scrollbar{\r\n        display: none;\r\n    }\r\n\r\n    -ms-overflow-style: none;\r\n    scrollbar-width: none;\r\n\r\n    .emailList_settings{\r\n        position: sticky;\r\n        top: 0;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        border-bottom: 1px solid whitesmoke;\r\n        background-color: white;\r\n        z-index: 999;\r\n        padding-right: 10px;\r\n    }\r\n\r\n    .emailList_sections{\r\n        position: sticky;\r\n        top: 0;\r\n        display: flex;\r\n        border-bottom: 1px solid whitesmoke;\r\n        background-color: white;\r\n        z-index: 999;\r\n    }\r\n\r\n    .emailList_list{\r\n        padding-bottom: 20%;\r\n    }\r\n`","C:\\Users\\Evyat\\home\\Worked-Projects\\gmail-react\\src\\components\\Section.js",[],"C:\\Users\\Evyat\\home\\Worked-Projects\\gmail-react\\src\\components\\EmailRow.js",["81","82","83","84"],"import React from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { Checkbox, IconButton } from '@material-ui/core';\r\nimport StarBorderOutlinedIcon from '@material-ui/icons/StarBorderOutlined';\r\nimport LabelImportantOutlinedIcon from '@material-ui/icons/LabelImportantOutlined';\r\nimport styled from 'styled-components';\r\nimport { useDispatch } from 'react-redux';\r\nimport { selectMail } from '../features/mailSlice';\r\n\r\nfunction EmailRow({ id, title, subject, description, time }) {\r\n\r\n   const history = useHistory();\r\n   const dispatch = useDispatch();\r\n\r\n   const openMail = () => {\r\n       dispatch(selectMail({\r\n           id, \r\n           title, \r\n           subject, \r\n           description, \r\n           time\r\n       })\r\n       );\r\n       history.push('/mail')\r\n   }\r\n\r\n\r\n    return (\r\n        <Div onClick={openMail}>\r\n            <EmailRow_Options>\r\n                <Checkbox />\r\n                <IconButton>\r\n                    <StarBorderOutlinedIcon />\r\n                </IconButton>\r\n                <IconButton>\r\n                    <LabelImportantOutlinedIcon />\r\n                </IconButton>\r\n            </EmailRow_Options>\r\n\r\n            <EmailRow_title>\r\n                {title}\r\n            </EmailRow_title>\r\n               \r\n            <EmailRow_message>\r\n                <h4>{subject}\r\n                     <span className=\"emailRow_description\"> - {description} </span>\r\n                </h4>\r\n            </EmailRow_message>\r\n\r\n            <EmailRow_time>\r\n                {time}\r\n            </EmailRow_time>\r\n        </Div>\r\n    )\r\n}\r\n\r\nexport default EmailRow;\r\n\r\nconst Div = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    height: 50px;\r\n    border-bottom: 1px solid whitesmoke;\r\n    cursor: pointer;\r\n    z-index: 999;\r\n\r\n    :hover{\r\n        border-top: 1px solid whitesmoke; \r\n        box-shadow: 0px 4px 4px -2px rgba(0,0,0,0.24);\r\n    }\r\n`\r\nconst EmailRow_Options = styled.div`\r\n    display: flex;\r\n`\r\nconst EmailRow_title = styled.h3`\r\n   font-size: 13px;\r\n   flex: 0.3;\r\n`\r\nconst EmailRow_message = styled.div`\r\n    display: flex;\r\n    flex: 0.8;\r\n    align-items: center;\r\n    font-size: 13px;\r\n\r\n    .emailRow_description{\r\n        font-weight: 400;\r\n        color: gray;\r\n    }\r\n\r\n    h4{\r\n        width: 400px;\r\n        white-space: nowrap;\r\n        overflow: hidden;\r\n        text-overflow:ellipsis;\r\n        padding-left: 5px;\r\n        padding-right: 5px;\r\n    }\r\n`\r\nconst EmailRow_time = styled.p`\r\n   padding-right: 15px;\r\n   font-size: 9px;\r\n   font-weight: bold;\r\n`\r\n\r\n",["85","86"],"C:\\Users\\Evyat\\home\\Worked-Projects\\gmail-react\\src\\features\\mailSlice.js",[],"C:\\Users\\Evyat\\home\\Worked-Projects\\gmail-react\\src\\components\\SendMail.js",["87"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Button } from '@material-ui/core';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { closeSendMessage } from '../features/mailSlice';\r\nimport { db } from '../firebase';\r\nimport firebase from 'firebase';\r\n\r\nfunction SendMail() {\r\n\r\n    const { register , handleSubmit, watch, errors } = useForm();\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (formData) => {\r\n      db.collection('emails').add({\r\n          to: formData.to,\r\n          subject: formData.subject,\r\n          message: formData.message,\r\n          timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n          });\r\n\r\n          dispatch(closeSendMessage());\r\n    }\r\n\r\n    return (\r\n        <Div>\r\n            <div className=\"sendMail_header\">\r\n                <h3> New Message </h3>\r\n                <CloseIcon \r\n                        onClick={() => dispatch(closeSendMessage())}\r\n                        className=\"sendMail_close\" \r\n                />\r\n            </div>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <input \r\n                     type=\"email\" \r\n                     placeholder=\"To\" \r\n                     name=\"to\" \r\n                     ref={register({ required: true})} \r\n                />\r\n                {errors.to && <p className=\"sendMail_error\">To is required</p> }\r\n                <input \r\n                     type=\"text\" \r\n                     placeholder=\"Subject\" \r\n                     name=\"subject\" \r\n                     ref={register({ required: true})} \r\n                />\r\n                {errors.subject && <p className=\"sendMail_error\">subject is required</p> }\r\n                <input \r\n                     type=\"text\" \r\n                     placeholder=\"Message...\" \r\n                     className=\"sendMail_message\" \r\n                     name=\"message\"\r\n                     ref={register({ required: true})} \r\n                />\r\n                 {errors.message && <p className=\"sendMail_error\">message is required</p> }\r\n\r\n                <div className=\"sendMail_options\">\r\n                    <Button\r\n                         className=\"sendMail_BTN\"\r\n                         variant=\"contained\"\r\n                         color=\"primary\"\r\n                         type=\"submit\"\r\n                         >\r\n                             Send\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </Div>\r\n    )\r\n}\r\n\r\nexport default SendMail;\r\n\r\nconst Div = styled.div`\r\n   position: absolute;\r\n   bottom: 0px;\r\n   right: 50px;\r\n   background-color: #404040;\r\n   width: 40%;\r\n   height: 40%;\r\n   max-width: 500px;\r\n   display: flex;\r\n   flex-direction: column;\r\n   border: 1px solid whitesmoke;\r\n   box-shadow: 0px 5px 7px 0px rgba(0,0,0,0.24);\r\n\r\n   form {\r\n       display: flex;\r\n       flex: 1;\r\n       flex-direction: column;\r\n   }\r\n\r\n   form > input {\r\n       height: 30px;\r\n       padding: 10px;\r\n       border: none;\r\n       border-bottom: 1px solid whitesmoke;\r\n       outline: none;\r\n   }\r\n\r\n.sendMail_header{\r\n    padding: 13px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    color: gray;\r\n\r\n    h3{\r\n        color: whitesmoke;\r\n        font-size: 13px;\r\n    }\r\n}\r\n\r\n.sendMail_BTN{\r\n    background-color: #3079ed !important;\r\n    text-transform: capitalize !important;\r\n    margin: 15px !important;\r\n}\r\n\r\n.sendMail_close{\r\n    cursor: pointer;\r\n}\r\n\r\n.sendMail_message{\r\n    flex: 1;\r\n}\r\n\r\n.sendMail_error{\r\n    background-color: white;\r\n    color: red;\r\n    text-align:right;\r\n    padding: 2px;\r\n}\r\n`","C:\\Users\\Evyat\\home\\Worked-Projects\\gmail-react\\src\\firebase.js",[],"C:\\Users\\Evyat\\home\\Worked-Projects\\gmail-react\\src\\features\\userSlice.js",[],"C:\\Users\\Evyat\\home\\Worked-Projects\\gmail-react\\src\\components\\Login.js",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":6,"column":47,"nodeType":"94","messageId":"95","endLine":6,"endColumn":51},{"ruleId":"96","severity":1,"message":"97","line":37,"column":5,"nodeType":"98","endLine":37,"endColumn":7,"suggestions":"99"},{"ruleId":"100","severity":1,"message":"101","line":26,"column":13,"nodeType":"102","endLine":26,"endColumn":26},{"ruleId":"100","severity":1,"message":"103","line":36,"column":13,"nodeType":"102","endLine":36,"endColumn":28},{"ruleId":"100","severity":1,"message":"104","line":42,"column":13,"nodeType":"102","endLine":42,"endColumn":27},{"ruleId":"96","severity":1,"message":"105","line":34,"column":7,"nodeType":"98","endLine":34,"endColumn":9,"suggestions":"106"},{"ruleId":"100","severity":1,"message":"107","line":30,"column":13,"nodeType":"102","endLine":30,"endColumn":31},{"ruleId":"100","severity":1,"message":"108","line":40,"column":13,"nodeType":"102","endLine":40,"endColumn":29},{"ruleId":"100","severity":1,"message":"109","line":44,"column":13,"nodeType":"102","endLine":44,"endColumn":31},{"ruleId":"100","severity":1,"message":"110","line":50,"column":13,"nodeType":"102","endLine":50,"endColumn":28},{"ruleId":"88","replacedBy":"111"},{"ruleId":"90","replacedBy":"112"},{"ruleId":"92","severity":1,"message":"113","line":13,"column":38,"nodeType":"94","messageId":"95","endLine":13,"endColumn":43},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["116"],"react/jsx-pascal-case","Imported JSX component Header_left must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component Header_middle must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Header_right must be in PascalCase or SCREAMING_SNAKE_CASE","React Hook useEffect has a missing dependency: 'emails'. Either include it or remove the dependency array.",["117"],"Imported JSX component EmailRow_Options must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component EmailRow_title must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component EmailRow_message must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component EmailRow_time must be in PascalCase or SCREAMING_SNAKE_CASE",["114"],["115"],"'watch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},"Update the dependencies array to be: [dispatch]",{"range":"122","text":"123"},"Update the dependencies array to be: [emails]",{"range":"124","text":"125"},[1156,1158],"[dispatch]",[1281,1283],"[emails]"]